function prettify_plot(sameX, sameY, inputColor, titleFontSize, labelFontSize, generalFontSize, pointSize, lineThickness, fontColor)
    
    

    % Set default parameter values
    if nargin < 1 || isempty(sameX)
        sameX = 'all';
    end
    if nargin < 2 || isempty(sameY)
        sameY = 'all';
    end
    if nargin < 3 || isempty(inputColor)
        inputColor = 'w';
    end
    if nargin < 4 || isempty(titleFontSize)
        titleFontSize = 18;
    end
    if nargin < 5 || isempty(labelFontSize)
        labelFontSize = 15;
    end
    if nargin < 6 || isempty(generalFontSize)
        generalFontSize = 13;
    end
    if nargin < 7 || isempty(pointSize)
        pointSize = 15;
    end
    if nargin < 8 || isempty(lineThickness)
        lineThickness = 2;
    end
    if nargin < 9 || isempty(fontColor)
        % Set default font color based on the input color
        switch inputColor
            case 'k'
                fontColor = 'w';
            case 'none'
                fontColor = [0.7, 0.7, 0.7]; % Gray
            otherwise
                fontColor = 'k';
        end
    end
    
    % Get handles for current figure and axis
    currFig = gcf;
    
    
    % Set color properties for figure and axis
    set(currFig, 'color', inputColor);
    
    % get axes children 
    all_axes = find(arrayfun(@(x) contains(currFig.Children(x).Type, 'axes'), 1:size(currFig.Children,1)));

    for iAx = 1:size(all_axes,2)
        thisAx = all_axes(iAx);
        currAx = currFig.Children(thisAx);
        set(currAx, 'color', inputColor);
        if ~isempty(currAx)
            % Set font properties for the axis
            set(currAx.XLabel, 'FontSize', labelFontSize, 'Color', fontColor);
            set(currAx.YLabel, 'FontSize', labelFontSize, 'Color', fontColor);
            set(currAx.Title, 'FontSize', titleFontSize, 'Color', fontColor);
            set(currAx, 'FontSize', generalFontSize, 'GridColor', fontColor, ...
                        'YColor', fontColor, 'XColor', fontColor, ...
                        'MinorGridColor', fontColor);
            
            % Adjust properties of line children within the plot
            childLines = findall(currAx, 'Type', 'line');
            for thisLine = childLines'
                if strcmp('.', get(thisLine, 'Marker'))
                    set(thisLine, 'MarkerSize', pointSize);
                end
                if strcmp('-', get(thisLine, 'LineStyle'))
                    set(thisLine, 'LineWidth', lineThickness);
                end
            end
            
            % Get x and y limits 
            xlims_subplot(iAx,:) = get(gca, 'XLim');
            ylims_subplot(iAx,:) = get(gca, 'YLim');

            % Get plot position
            pos_subplot(iAx,:) = currAx.Position(1:2); % [left bottom width height]
        end
    end


    % make x and y lims the same 
    if ismember(sameX, {'all', 'row', 'col'}) || ismember(sameY, {'all', 'row', 'col'})
        % get rows and cols 
        col_subplots = unique(pos_subplot(:,1));
        row_subplots = unique(pos_subplot(:,2));

        col_xlims = arrayfun(@(x) xlims_subplot(pos_subplot(:,1)==col_subplots(x),:), 1:size(col_subplots,1), 'UniformOutput', false);
        row_xlims = arrayfun(@(x) [min(min(xlims_subplot(pos_subplot(:,2)==row_subplots(x),:))),...
            max(max(xlims_subplot(pos_subplot(:,2)==row_subplots(x),:)))], 1:size(row_subplots,1), 'UniformOutput', false);

        for iAx = 1:size(all_axes,2)
            thisAx = all_axes(iAx);
            currAx = currFig.Children(thisAx);
            if ~isempty(currAx)
                if ismember(sameX, {'all'})
                    set(currAx, 'Xlim', [ min(min(xlims_subplot)), max(max(xlims_subplot))]);
                end
                if ismember(sameX, {'row'})
                    set(currAx, 'Xlim', [ min(min(xlims_subplot)), max(max(xlims_subplot))]);
                end
                if ismember(sameY, {'all'})
                    set(currAx, 'Ylim', [ min(min(ylims_subplot)), max(max(ylims_subplot))]);
                end
            end
        end
    end
end


